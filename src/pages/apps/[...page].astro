---
import AppsList from '@/components/AppsList.astro'
import Pagination from '@/components/Pagination.astro'
import PageLayout, {
  type Props as PageLayoutProps
} from '@/layouts/PageLayout.astro'
import config from '@/theme.config'
import { getProjects } from '@/util/projects'
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro'
import TimerApp from '../../components/reactComponents/Timer.jsx'

export const getStaticPaths = (async ({ paginate }) => {
  const projects = await getProjects()

  return paginate(projects, { pageSize: config.projectsPerPage })
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { page } = Astro.props

const frontmatter: PageLayoutProps['frontmatter'] = {
  title: 'Apps',
  activeHeaderLink: 'Apps',
  canonicalURL: new URL('/apps/1', Astro.site).toString()
}
---

<PageLayout {frontmatter}>
  <h1>
    {frontmatter.title}
  </h1>
  <div class="container mx-auto px-4 py-8">
    <h1 class="mb-8 text-center text-3xl font-bold">My Timer Page</h1>

    <!-- The client:load directive makes the component interactive -->
    <TimerApp client:load />

    <div class="mt-8 text-center text-gray-600">
      <p>
        This timer runs entirely in the browser and works on your static site!
      </p>
    </div>
  </div>

  <AppsList apps={page.data} />
  <Pagination slot="bottom" page={page} />
</PageLayout>

<style>
  /* You can add any additional styling here */
  main {
    min-height: 100vh;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  }
</style>
